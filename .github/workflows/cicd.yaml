# This workflow will install Python dependencies, run tests and lint with a single version of Python.
# Creation static html documentation file and add to the PR.
#
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        repository: tranquilitybase-io/tb-houston-service
        path: tb-houston-service
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        env
        cd ${GITHUB_WORKSPACE}/tb-houston-service
        ls -alrt
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        # No tests at the moment
        #pytest tests/
        ls -alrt 
    - name: Install redoc-cli and generate API documentation
      run: |
        ls -alrt 
        cd tb-houston-service
        npm install redoc-cli
        ls -alrt 
        #npx redoc-cli bundle ${GITHUB_WORKSPACE}/tb-houston-service/openapi/houston_service.yml --title "Houston Service REST API"
        npx redoc-cli bundle openapi/houston_service.yml --title "Houston Service REST API"
    - name: Git add, commit and Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd tb-houston-service
        git config user.email action@github.com
        git config user.name "Github Action"
        git fetch
        git checkout ${GITHUB_HEAD_REF}
        git commit -a -m "Add automatically generated redoc HTML documentation"
        git push
